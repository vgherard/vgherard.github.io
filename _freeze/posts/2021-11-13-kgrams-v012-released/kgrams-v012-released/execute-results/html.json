{
  "hash": "adf52cfc4b9eecfcffc546dbc196f225",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"kgrams v0.1.2 on CRAN\"\ndescription: |\n  kgrams: Classical k-gram Language Models in R.\ndate: 2021-11-13\ncategories:\n  - Natural Language Processing\n  - R\ndraft: false\n---\n\n\n\n\n\n## Summary\n\nVersion v0.1.2 of my R package [kgrams](https://github.com/vgherard/kgrams) was just accepted by CRAN. This package provides tools for training and evaluating k-gram language models in R, supporting several probability smoothing techniques, perplexity computations, random text generation and more.\n\n## Short demo\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(kgrams)\n# Get k-gram frequency counts from Shakespeare's \"Much Ado About Nothing\"\nfreqs <- kgram_freqs(kgrams::much_ado, N = 4)\n\n# Build modified Kneser-Ney 4-gram model, with discount parameters D1, D2, D3.\nmkn <- language_model(freqs, smoother = \"mkn\", D1 = 0.25, D2 = 0.5, D3 = 0.75)\n\n# Sample sentences from the language model at different temperatures\nset.seed(840)\nsample_sentences(model = mkn, n = 3, max_length = 10, t = 1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"i have studied eight or nine truly by your office [...] (truncated output)\"\n[2] \"ere you go : <EOS>\"                                                        \n[3] \"don pedro welcome signior : <EOS>\"                                         \n```\n\n\n:::\n\n```{.r .cell-code}\nsample_sentences(model = mkn, n = 3, max_length = 10, t = 0.1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"i will not be sworn but love may transform me [...] (truncated output)\" \n[2] \"i will not fail . <EOS>\"                                                \n[3] \"i will go to benedick and counsel him to fight [...] (truncated output)\"\n```\n\n\n:::\n\n```{.r .cell-code}\nsample_sentences(model = mkn, n = 3, max_length = 10, t = 10)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"july cham's incite start ancientry effect torture tore pains endings [...] (truncated output)\"   \n[2] \"lastly gallants happiness publish margaret what by spots commodity wake [...] (truncated output)\"\n[3] \"born all's 'fool' nest praise hurt messina build afar dancing [...] (truncated output)\"          \n```\n\n\n:::\n:::\n\n\n\n## NEWS\n\n### Overall Software Improvements\n\n-   The package's test suite has been greatly extended.\n-   Improved error/warning conditions for wrong arguments.\n-   Re-enabled compiler diagnostics as per CRAN policy (#19)\n\n### API Changes\n\n-   `verbose` arguments now default to `FALSE`.\n-   `probability()`, `perplexity()` and `sample_sentences()` are restricted to accept only `language_model` class objects as their `model` argument.\n\n### New features\n\n-   `as_dictionary(NULL)` now returns an empty `dictionary`.\n\n### Bug Fixes\n\n-   Fixed bug causing `.preprocess` and `.tknz_sent` arguments to be ignored in `process_sentences()`.\n-   Fixed previously wrong defaults for `max_lines` and `batch_size` arguments in `kgram_freqs.connection()`.\n-   Added print method for class `dictionary`.\n-   Fixed bug causing invalid results in `dictionary()` with batch processing and non-trivial size constraints on vocabulary size.\n\n### Other\n\n-   Maintainer's email updated\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}