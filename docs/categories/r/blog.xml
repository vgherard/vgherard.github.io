<?xml version="1.0" encoding="UTF-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:distill="https://distill.pub/journal/" version="2.0">
  <channel>
    <title>Valerio Gherardi</title>
    <link>https://vgherard.github.io/</link>
    <atom:link href="https://vgherard.github.io/blog.xml" rel="self" type="application/rss+xml"/>
    <description>Valerio Gherardi
</description>
    <generator>Distill</generator>
    <lastBuildDate>Tue, 06 Jul 2021 00:00:00 +0000</lastBuildDate>
    <item>
      <title>{r2r} now on CRAN</title>
      <dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vgherard</dc:creator>
      <link>https://vgherard.github.io/posts/2021-07-06-r2r</link>
      <description>


&lt;h1 id="introduction"&gt;Introduction&lt;/h1&gt;
&lt;p&gt;My package &lt;code&gt;{r2r}&lt;/code&gt; (v0.1.1) has been accepted by &lt;a href="https://CRAN.R-project.org/package=r2r"&gt;CRAN&lt;/a&gt;, and is now available for download from the public repository.&lt;/p&gt;
&lt;h2 id="r2r"&gt;r2r&lt;/h2&gt;
&lt;!-- badges: start --&gt;
&lt;p&gt;&lt;a href="https://CRAN.R-project.org/package=r2r"&gt;&lt;img src="https://www.r-pkg.org/badges/version/r2r" alt="CRAN status" /&gt;&lt;/a&gt; &lt;a href="https://github.com/vgherard/r2r/actions"&gt;&lt;img src="https://github.com/vgherard/r2r/workflows/R-CMD-check/badge.svg" alt="R-CMD-check" /&gt;&lt;/a&gt; &lt;a href="https://codecov.io/gh/vgherard/r2r?branch=master"&gt;&lt;img src="https://codecov.io/gh/vgherard/r2r/branch/master/graph/badge.svg" alt="Codecov test coverage" /&gt;&lt;/a&gt; &lt;!-- badges: end --&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://vgherard.github.io/r2r/"&gt;&lt;code&gt;r2r&lt;/code&gt;&lt;/a&gt; provides a flexible implementation of hash tables in R, allowing for:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;arbitrary R objects as keys and values,&lt;/li&gt;
&lt;li&gt;arbitrary key comparison and hash functions,&lt;/li&gt;
&lt;li&gt;customizable behaviour (throw or return a default value) on missing key exceptions.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="installation"&gt;Installation&lt;/h2&gt;
&lt;p&gt;You can install the released version of &lt;code&gt;r2r&lt;/code&gt; from &lt;a href="https://CRAN.R-project.org/package=r2r"&gt;CRAN&lt;/a&gt; with:&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;install.packages(&amp;quot;r2r&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and the development version from &lt;a href="https://vgherard.r-universe.dev/"&gt;my R-universe repository&lt;/a&gt;, with:&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;install.packages(&amp;quot;r2r&amp;quot;, repos = &amp;quot;https://vgherard.r-universe.dev&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id="usage"&gt;Usage&lt;/h2&gt;
&lt;pre class="r"&gt;&lt;code&gt;library(r2r)
m &amp;lt;- hashmap()

# Insert and query a single key-value pair
m[[ &amp;quot;user&amp;quot; ]] &amp;lt;- &amp;quot;vgherard&amp;quot;
m[[ &amp;quot;user&amp;quot; ]]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[1] &amp;quot;vgherard&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class="r"&gt;&lt;code&gt;# Insert and query multiple key-value pairs
m[ c(1, 2, 3) ] &amp;lt;- c(&amp;quot;one&amp;quot;, &amp;quot;two&amp;quot;, &amp;quot;three&amp;quot;)
m[ c(1, 3) ]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[[1]]
[1] &amp;quot;one&amp;quot;

[[2]]
[1] &amp;quot;three&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class="r"&gt;&lt;code&gt;# Keys and values can be arbitrary R objects
m[[ lm(mpg ~ wt, mtcars) ]] &amp;lt;- c(TRUE, FALSE, TRUE)
m[[ lm(mpg ~ wt, mtcars) ]]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id="getting-help"&gt;Getting help&lt;/h2&gt;
&lt;p&gt;For further details, including an introductory vignette illustrating the features of &lt;code&gt;r2r&lt;/code&gt; hash maps, you can consult the &lt;code&gt;r2r&lt;/code&gt; &lt;a href="https://vgherard.github.io/r2r/"&gt;website&lt;/a&gt;. If you encounter a bug, want to suggest a feature or need further help, you can &lt;a href="https://github.com/vgherard/r2r/issues"&gt;open a GitHub issue&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="comparison-with-hash"&gt;Comparison with &lt;code&gt;hash&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;CRAN package &lt;a href="https://CRAN.R-project.org/package=hash"&gt;&lt;code&gt;{hash}&lt;/code&gt;&lt;/a&gt; also offers an implementation of hash tables based on R environments. The two tables below offer a comparison between &lt;code&gt;{r2r}&lt;/code&gt; and &lt;code&gt;{hash}&lt;/code&gt; (for more details, see the &lt;a href="https://vgherard.github.io/r2r/articles/benchmarks.html"&gt;benchmarks&lt;/a&gt; Vignette)&lt;/p&gt;
&lt;table&gt;
&lt;caption&gt;(#tab:unnamed-chunk-2)Features supported by {r2r} and {hash}.&lt;/caption&gt;
&lt;thead&gt;
&lt;tr class="header"&gt;
&lt;th align="center"&gt;Feature&lt;/th&gt;
&lt;th align="center"&gt;r2r&lt;/th&gt;
&lt;th align="center"&gt;hash&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class="odd"&gt;
&lt;td align="center"&gt;Basic data structure&lt;/td&gt;
&lt;td align="center"&gt;R environment&lt;/td&gt;
&lt;td align="center"&gt;R environment&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="even"&gt;
&lt;td align="center"&gt;Arbitrary type keys&lt;/td&gt;
&lt;td align="center"&gt;X&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="odd"&gt;
&lt;td align="center"&gt;Arbitrary type values&lt;/td&gt;
&lt;td align="center"&gt;X&lt;/td&gt;
&lt;td align="center"&gt;X&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="even"&gt;
&lt;td align="center"&gt;Arbitrary hash function&lt;/td&gt;
&lt;td align="center"&gt;X&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="odd"&gt;
&lt;td align="center"&gt;Arbitrary key comparison function&lt;/td&gt;
&lt;td align="center"&gt;X&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="even"&gt;
&lt;td align="center"&gt;Throw or return default on missing keys&lt;/td&gt;
&lt;td align="center"&gt;X&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="odd"&gt;
&lt;td align="center"&gt;Hash table inversion&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;td align="center"&gt;X&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table&gt;
&lt;caption&gt;(#tab:unnamed-chunk-3)Performances of {r2r} and {hash} for basic hash table operations.&lt;/caption&gt;
&lt;thead&gt;
&lt;tr class="header"&gt;
&lt;th align="center"&gt;Task&lt;/th&gt;
&lt;th align="center"&gt;Comparison&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class="odd"&gt;
&lt;td align="center"&gt;Key insertion&lt;/td&gt;
&lt;td align="center"&gt;{r2r} ~ {hash}&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="even"&gt;
&lt;td align="center"&gt;Key query&lt;/td&gt;
&lt;td align="center"&gt;{r2r} &amp;lt; {hash}&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="odd"&gt;
&lt;td align="center"&gt;Key deletion&lt;/td&gt;
&lt;td align="center"&gt;{r2r} &amp;lt;&amp;lt; {hash}&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;pre class="r distill-force-highlighting-css"&gt;&lt;code&gt;&lt;/code&gt;&lt;/pre&gt;</description>
      <distill:md5 xmlns:distill="https://distill.pub/journal/">a5018f8ab5bf51a7b5e26c0cc8bec0a0</distill:md5>
      <category>R</category>
      <guid>https://vgherard.github.io/posts/2021-07-06-r2r</guid>
      <pubDate>Mon, 05 Jul 2021 00:00:00 +0000</pubDate>
    </item>
  </channel>
</rss>
