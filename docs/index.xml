<?xml version="1.0" encoding="UTF-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:distill="https://distill.pub/journal/" version="2.0">
  <channel>
    <title>Valerio Gherardi</title>
    <link>https://vgherard.github.io/</link>
    <atom:link href="https://vgherard.github.io/index.xml" rel="self" type="application/rss+xml"/>
    <description>Valerio Gherardi
</description>
    <generator>Distill</generator>
    <lastBuildDate>2023-06-13</lastBuildDate>
    <item>
      <title>Sum and ratio of independent random variables</title>
      <dc:creator>vgherard</dc:creator>
      <link>https://vgherard.github.io/posts/sum-and-ratio-of-independent-random-variables</link>
      <description>


&lt;p&gt;Let &lt;span class="math inline"&gt;\(X\)&lt;/span&gt; and &lt;span
class="math inline"&gt;\(Y\)&lt;/span&gt; be two continuous independent random
variables, with joint density &lt;span
class="math inline"&gt;\(f_{XY}(x,y)=f_X(x)f_Y(y)\)&lt;/span&gt;. Define: &lt;span
class="math display"&gt;\[
s = x+y, \qquad r = x/y,
\]&lt;/span&gt; with inverse transformation given by:&lt;/p&gt;
&lt;p&gt;&lt;span class="math display"&gt;\[
y = \frac{s}{1+r},\qquad x = \frac{rs}{1+r}.
\]&lt;/span&gt; The Jacobian of the &lt;span class="math inline"&gt;\((x,y) \mapsto
(s,r)\)&lt;/span&gt; transformation is:&lt;/p&gt;
&lt;p&gt;&lt;span class="math display"&gt;\[
\left|\dfrac{\partial (s,r)}{\partial(x,y)}\right|= \dfrac{(1+r)^2}{s}.
\]&lt;/span&gt; Hence the joint density of &lt;span class="math inline"&gt;\(S =
X+Y\)&lt;/span&gt; and &lt;span class="math inline"&gt;\(R = X/Y\)&lt;/span&gt; is given
by:&lt;/p&gt;
&lt;p&gt;&lt;span class="math display"&gt;\[
f_{SR}(s,r) = f(x,y)\left|\dfrac{\partial
(x,y)}{\partial(s,r)}\right|=f_X(\frac{rs}{1+r})f_Y(\frac{s}{1+r})\frac{s}{(1+r)^2}.
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;The necessary and sufficient condition for this to factorize into a
product, &lt;span class="math inline"&gt;\(f_{SR}(s,r)\equiv
f_S(s)f_R(r)\)&lt;/span&gt;, is that &lt;span class="math inline"&gt;\(f_X(x)f_Y(y)
= g_S(s)g_R(r)\)&lt;/span&gt; for some functions &lt;span
class="math inline"&gt;\(g_S\)&lt;/span&gt; and &lt;span
class="math inline"&gt;\(g_R\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;This is true for all functions &lt;span
class="math inline"&gt;\(f_X\)&lt;/span&gt; and &lt;span
class="math inline"&gt;\(f_Y\)&lt;/span&gt; from the family:&lt;/p&gt;
&lt;p&gt;&lt;span class="math display"&gt;\[
\phi(t) = \text{const} \times  t^\alpha e^{-\beta t}.
\]&lt;/span&gt; This includes some important special cases:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;span class="math inline"&gt;\(\chi ^2\)&lt;/span&gt; distribution (&lt;span
class="math inline"&gt;\(\alpha = \frac{\nu}{2}-1,\,\beta =
\frac{1}{2}\)&lt;/span&gt;).&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;The exponential distribution: &lt;span class="math inline"&gt;\(\alpha =
0,\,\beta &amp;gt;0\)&lt;/span&gt;.&lt;/li&gt;
&lt;li&gt;The “homogeneous” distribution: &lt;span class="math inline"&gt;\(\beta =
0\)&lt;/span&gt; (restricted to the appropriate domain).&lt;/li&gt;
&lt;li&gt;The uniform distribution: &lt;span class="math inline"&gt;\(\alpha = \beta
= 0\)&lt;/span&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="r distill-force-highlighting-css"&gt;&lt;code&gt;&lt;/code&gt;&lt;/pre&gt;</description>
      <distill:md5>b61932125586f40a3cf3b2172f012ec5</distill:md5>
      <category>Mathematics</category>
      <category>Probability Theory</category>
      <guid>https://vgherard.github.io/posts/sum-and-ratio-of-independent-random-variables</guid>
      <pubDate>2023-06-13</pubDate>
    </item>
    <item>
      <title>Fisher's Randomization Test</title>
      <dc:creator>vgherard</dc:creator>
      <link>https://vgherard.github.io/posts/2023-06-07-fishers-randomization-test</link>
      <description>Notes and proofs of basic theorems</description>
      <category>Statistics</category>
      <category>Frequentist Methods</category>
      <category>Causal Inference</category>
      <guid>https://vgherard.github.io/posts/2023-06-07-fishers-randomization-test</guid>
      <pubDate>2023-06-07</pubDate>
    </item>
    <item>
      <title>p-values and measure theory</title>
      <dc:creator>vgherard</dc:creator>
      <link>https://vgherard.github.io/posts/2023-06-07-p-values-and-measure-theory</link>
      <description>Self-reassurance that p-value properties don't depend on regularity 
assumptions on the test statistic.</description>
      <category>Statistics</category>
      <category>Measure Theory</category>
      <category>Frequentist Methods</category>
      <guid>https://vgherard.github.io/posts/2023-06-07-p-values-and-measure-theory</guid>
      <pubDate>2023-06-07</pubDate>
    </item>
    <item>
      <title>Linear regression with autocorrelated noise</title>
      <dc:creator>vgherard</dc:creator>
      <link>https://vgherard.github.io/posts/2023-05-20-linear-regression-with-autocorrelated-noise</link>
      <description>Effects of noise autocorrelation on linear regression. Explicit formulae and a simple simulation.</description>
      <category>Statistics</category>
      <category>Regression</category>
      <category>Time Series</category>
      <category>Linear Models</category>
      <category>Model Misspecification</category>
      <category>R</category>
      <guid>https://vgherard.github.io/posts/2023-05-20-linear-regression-with-autocorrelated-noise</guid>
      <pubDate>2023-05-25</pubDate>
      <media:content url="https://vgherard.github.io/posts/2023-05-20-linear-regression-with-autocorrelated-noise/linear-regression-with-autocorrelated-noise_files/figure-html5/unnamed-chunk-2-1.png" medium="image" type="image/png" width="1248" height="768"/>
    </item>
    <item>
      <title>Model Misspecification and Linear Sandwiches</title>
      <dc:creator>vgherard</dc:creator>
      <link>https://vgherard.github.io/posts/2023-05-14-model-misspecification-and-linear-sandwiches</link>
      <description>Being wrong in the right way. With R excerpts.</description>
      <category>Statistics</category>
      <category>Regression</category>
      <category>Linear Models</category>
      <category>Model Misspecification</category>
      <category>R</category>
      <guid>https://vgherard.github.io/posts/2023-05-14-model-misspecification-and-linear-sandwiches</guid>
      <pubDate>2023-05-14</pubDate>
      <media:content url="https://vgherard.github.io/posts/2023-05-14-model-misspecification-and-linear-sandwiches/misspecification-and-linear-sandwiches_files/figure-html5/unnamed-chunk-7-1.png" medium="image" type="image/png" width="1248" height="768"/>
    </item>
    <item>
      <title>Consistency and bias of OLS estimators</title>
      <dc:creator>vgherard</dc:creator>
      <link>https://vgherard.github.io/posts/2023-05-12-consistency-and-bias-of-ols-estimators</link>
      <description>OLS estimators are consistent but generally biased - here's an example.</description>
      <category>Statistics</category>
      <category>Regression</category>
      <category>Linear Models</category>
      <category>Model Misspecification</category>
      <guid>https://vgherard.github.io/posts/2023-05-12-consistency-and-bias-of-ols-estimators</guid>
      <pubDate>2023-05-12</pubDate>
    </item>
    <item>
      <title>Bayes, Neyman and the Magic Piggy Bank</title>
      <dc:creator>vgherard</dc:creator>
      <link>https://vgherard.github.io/posts/2023-05-01-magic-piggy-bank</link>
      <description>Compares frequentist properties of credible intervals and confidence 
intervals in a gambling game involving a magic piggy bank.</description>
      <category>Statistics</category>
      <category>Confidence Intervals</category>
      <category>Frequentist Methods</category>
      <category>Bayesian Methods</category>
      <guid>https://vgherard.github.io/posts/2023-05-01-magic-piggy-bank</guid>
      <pubDate>2023-05-01</pubDate>
    </item>
    <item>
      <title>Correlation Without Causation</title>
      <dc:creator>vgherard</dc:creator>
      <link>https://vgherard.github.io/posts/2023-03-10-correlation-without-causation</link>
      <description>*Cum hoc ergo propter hoc*</description>
      <category>Statistics</category>
      <guid>https://vgherard.github.io/posts/2023-03-10-correlation-without-causation</guid>
      <pubDate>2023-03-30</pubDate>
    </item>
    <item>
      <title>How to get away with selection. Part II: Mathematical Framework</title>
      <dc:creator>vgherard</dc:creator>
      <link>https://vgherard.github.io/posts/2022-11-07-posi-2</link>
      <description>Mathematicals details on Selective Inference, model misspecification and coverage guarantees.</description>
      <category>Statistics</category>
      <category>Selective Inference</category>
      <category>Model Misspecification</category>
      <guid>https://vgherard.github.io/posts/2022-11-07-posi-2</guid>
      <pubDate>2022-11-25</pubDate>
    </item>
    <item>
      <title>How to get away with selection. Part I: Introduction</title>
      <dc:creator>vgherard</dc:creator>
      <link>https://vgherard.github.io/posts/2022-10-18-posi</link>
      <description>Introducing the problem of Selective Inference, illustrated through a simple simulation in R.</description>
      <category>Statistics</category>
      <category>Selective Inference</category>
      <category>R</category>
      <guid>https://vgherard.github.io/posts/2022-10-18-posi</guid>
      <pubDate>2022-11-14</pubDate>
      <media:content url="https://vgherard.github.io/posts/2022-10-18-posi/posi_files/figure-html5/unnamed-chunk-3-1.png" medium="image" type="image/png" width="1248" height="768"/>
    </item>
    <item>
      <title>kgrams v0.1.2 on CRAN</title>
      <dc:creator>vgherard</dc:creator>
      <link>https://vgherard.github.io/posts/2021-11-13-kgrams-v012-released</link>
      <description>kgrams: Classical k-gram Language Models in R.</description>
      <category>Natural Language Processing</category>
      <category>R</category>
      <guid>https://vgherard.github.io/posts/2021-11-13-kgrams-v012-released</guid>
      <pubDate>2021-11-13</pubDate>
    </item>
    <item>
      <title>R Client for R-universe APIs</title>
      <dc:creator>vgherard</dc:creator>
      <link>https://vgherard.github.io/posts/2021-07-25-r-client-for-r-universe-apis</link>
      <description>Introducing W.I.P. {runiv}, an R package to interact with R-universe 
repository APIs</description>
      <category>R</category>
      <guid>https://vgherard.github.io/posts/2021-07-25-r-client-for-r-universe-apis</guid>
      <pubDate>2021-07-25</pubDate>
    </item>
    <item>
      <title>Automatic resumes of your R-developer portfolio from your R-Universe</title>
      <dc:creator>vgherard</dc:creator>
      <link>https://vgherard.github.io/posts/2021-07-21-automatically-resume-your-r-package-portfolio-using-the-r-universe-api</link>
      <description>Create automatic resumes of your R packages using the R-Universe API.</description>
      <category>R</category>
      <guid>https://vgherard.github.io/posts/2021-07-21-automatically-resume-your-r-package-portfolio-using-the-r-universe-api</guid>
      <pubDate>2021-07-21</pubDate>
    </item>
    <item>
      <title>{r2r} now on CRAN</title>
      <dc:creator>vgherard</dc:creator>
      <link>https://vgherard.github.io/posts/2021-07-06-r2r</link>
      <description>Introducing {r2r}, an R implementation of hash tables.</description>
      <category>Data Structures</category>
      <category>R</category>
      <guid>https://vgherard.github.io/posts/2021-07-06-r2r</guid>
      <pubDate>2021-07-06</pubDate>
    </item>
    <item>
      <title>Test post</title>
      <dc:creator>vgherard</dc:creator>
      <link>https://vgherard.github.io/posts/2021-07-06-test-post</link>
      <description>A short description of the post.</description>
      <category>Other</category>
      <guid>https://vgherard.github.io/posts/2021-07-06-test-post</guid>
      <pubDate>2021-07-06</pubDate>
    </item>
  </channel>
</rss>
