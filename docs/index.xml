<?xml version="1.0" encoding="UTF-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:distill="https://distill.pub/journal/" version="2.0">
  <channel>
    <title>Valerio Gherardi</title>
    <link>https://vgherard.github.io/</link>
    <atom:link href="https://vgherard.github.io/index.xml" rel="self" type="application/rss+xml"/>
    <description>Valerio Gherardi
</description>
    <generator>Distill</generator>
    <lastBuildDate>2024-01-28</lastBuildDate>
    <item>
      <title>Binary digits of uniform random variables</title>
      <dc:creator>vgherard</dc:creator>
      <link>https://vgherard.github.io/posts/2024-01-29-binary-digits-of-uniform-random-variables</link>
      <description>


&lt;p&gt;Let &lt;span class="math inline"&gt;\(X\)&lt;/span&gt; be a random number in the
unit interval &lt;span class="math inline"&gt;\([0,\,1]\)&lt;/span&gt;, and let
&lt;span class="math inline"&gt;\(Z \equiv (Z_k)_{k\in \mathbb N}\)&lt;/span&gt;
represent the sequence of its binary digits, so that &lt;span
class="math inline"&gt;\(Z_k \in \{0,\,1\}\)&lt;/span&gt; for all &lt;span
class="math inline"&gt;\(k\)&lt;/span&gt; and:&lt;/p&gt;
&lt;p&gt;&lt;span class="math display"&gt;\[
X = \sum _{k = 1} ^\infty Z_k \cdot 2^{-k}
\]&lt;/span&gt; Notice that the representation &lt;span
class="math inline"&gt;\(Z\)&lt;/span&gt; is unique for all &lt;span
class="math inline"&gt;\(X\)&lt;/span&gt; outside of a countable subset of the
unit interval.&lt;a href="#fn1" class="footnote-ref"
id="fnref1"&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The cool theorem proved below is that &lt;span
class="math inline"&gt;\(X\)&lt;/span&gt; is uniformly distributed in &lt;span
class="math inline"&gt;\([0,\,1]\)&lt;/span&gt; if and only if all &lt;span
class="math inline"&gt;\(Z_k\)&lt;/span&gt;’s are independent and &lt;span
class="math inline"&gt;\(\text{Pr}(Z_k = 1) = \text{Pr}(Z_k = 0) =
\frac{1}{2}\)&lt;/span&gt;. That is to say, the binary representation &lt;span
class="math inline"&gt;\(Z\)&lt;/span&gt; of a random variable &lt;span
class="math inline"&gt;\(X\sim \text{Unif}(0,\,1)\)&lt;/span&gt; amounts to a
sequence of independent fair coin tosses.&lt;/p&gt;
&lt;p&gt;We fix &lt;span class="math inline"&gt;\(n \in \mathbb N\)&lt;/span&gt; and
decompose the unit interval as follows:&lt;/p&gt;
&lt;p&gt;&lt;span class="math display"&gt;\[
[0,1) = \cup _{j = 1} ^{2^n} I^n_j,\quad I^n_j = [(j-1)
\cdot2^{-n},j\cdot2^{-n})
\]&lt;/span&gt; Each interval &lt;span class="math inline"&gt;\(I^n_j\)&lt;/span&gt;
corresponds to a specific set of values for the first &lt;span
class="math inline"&gt;\(n\)&lt;/span&gt; digits &lt;span
class="math inline"&gt;\(Z_1,\,Z_2,\,\dots,\,Z_n\)&lt;/span&gt;, that is &lt;span
class="math inline"&gt;\(X\in I^n _j\)&lt;/span&gt; if and only if &lt;span
class="math inline"&gt;\(Z_1 = z_1,\,Z_2 =z_2,\,\dots,\,Z_n=z_n\)&lt;/span&gt;
for some &lt;span class="math inline"&gt;\(z_1,\,z_2,\,\dots,\,z_n\)&lt;/span&gt;
that depend on the interval &lt;span class="math inline"&gt;\(I^n _j\)&lt;/span&gt;.
Therefore:&lt;/p&gt;
&lt;p&gt;&lt;span class="math display"&gt;\[
\text{Pr}(X\in I^n _j) = \text{Pr}(Z_1 = z_1,\,Z_2 = z_2,\,\dots,\,Z_n =
z_n)
\]&lt;/span&gt; Now, &lt;span class="math inline"&gt;\(X\)&lt;/span&gt; is uniformly
distributed if and only if the left hand side of this equation equals
&lt;span class="math inline"&gt;\(2^{-n}\)&lt;/span&gt; for all &lt;span
class="math inline"&gt;\(n\in \mathbb N\)&lt;/span&gt; and &lt;span
class="math inline"&gt;\(1\leq j \leq 2^{n}\)&lt;/span&gt; &lt;a href="#fn2"
class="footnote-ref" id="fnref2"&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt;. Furthermore, the
&lt;span class="math inline"&gt;\(2^{n}\)&lt;/span&gt; possible values of &lt;span
class="math inline"&gt;\(j\)&lt;/span&gt; correspond to the &lt;span
class="math inline"&gt;\(2^{n}\)&lt;/span&gt; possible values of &lt;span
class="math inline"&gt;\(z_1,\,z_2,\,\dots,\,z_n\)&lt;/span&gt; in the right hand
side. Therefore, &lt;span class="math inline"&gt;\(X\)&lt;/span&gt; is uniform if
and only if:&lt;/p&gt;
&lt;p&gt;&lt;span class="math display"&gt;\[
\text{Pr}(Z_1 = z_1,\,Z_2 = z_2,\,\dots,\,Z_n = z_n) = 2^{-n}
\]&lt;/span&gt; for all &lt;span class="math inline"&gt;\(z_1,\,z_2,\,\dots,\,z_n
\in \{0,\,1\}\)&lt;/span&gt;. More generally, this implies that, for any &lt;span
class="math inline"&gt;\(k \in \mathbb N \cup \{0\}\)&lt;/span&gt; we have:&lt;/p&gt;
&lt;p&gt;&lt;span class="math display"&gt;\[
\text{Pr}(Z_{k+1} = z_1,\,Z_{k+2} = z_2,\,\dots,\,Z_{k+n} = z_n) =
2^{-n} = \prod _{i=1}^{n}\text{Pr}(Z_{k+i} = z_i),
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;where the second equality follows from the special case &lt;span
class="math inline"&gt;\(n=1\)&lt;/span&gt;. This is equivalent to saying that
all &lt;span class="math inline"&gt;\(Z_k\)&lt;/span&gt;’s are independent, each
having &lt;span class="math inline"&gt;\(\text{Pr}(Z_k = 1) = \text{Pr}(Z_k =
0) = \frac{1}{2}\)&lt;/span&gt;.&lt;/p&gt;
&lt;pre class="r distill-force-highlighting-css"&gt;&lt;code&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;div class="footnotes footnotes-end-of-document"&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id="fn1"&gt;&lt;p&gt;That is, the set of numbers that have a &lt;em&gt;finite&lt;/em&gt;
expansion &lt;span class="math inline"&gt;\(X = \sum _{k = 1} ^N Z_k \cdot
2^{-k}\)&lt;/span&gt; for some finite &lt;span class="math inline"&gt;\(N\)&lt;/span&gt;,
with &lt;span class="math inline"&gt;\(Z_N = 1\)&lt;/span&gt;. These numbers also
have the equivalent infinite expansion &lt;span class="math inline"&gt;\(X =
\sum _{k = 1} ^{N-1} Z_k \cdot 2^{-k} + \sum _{k = N+1}
^{\infty}2^{-k}\)&lt;/span&gt;. For these numbers we can make the convention
of using the first (finite) representation.&lt;a href="#fnref1"
class="footnote-back"&gt;↩︎&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id="fn2"&gt;&lt;p&gt; That this is sufficient follows from the fact that any
interval of the real line can be obtained by taking countable unions and
intersections of intervals of the form &lt;span class="math inline"&gt;\(I^n
_j\)&lt;/span&gt;.&lt;a href="#fnref2" class="footnote-back"&gt;↩︎&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</description>
      <distill:md5>eee69c308badf4839d300612997f0cfa</distill:md5>
      <category>Probability Theory</category>
      <guid>https://vgherard.github.io/posts/2024-01-29-binary-digits-of-uniform-random-variables</guid>
      <pubDate>2024-01-28</pubDate>
    </item>
    <item>
      <title>Interpreting the Likelihood Ratio cost</title>
      <dc:creator>vgherard</dc:creator>
      <link>https://vgherard.github.io/posts/2023-11-15-interpreting-the-likelihood-ratio-cost</link>
      <description>Analysis of infinite sample properties and comparison with cross-entropy loss.</description>
      <category>Forensic Science</category>
      <category>Bayesian Methods</category>
      <category>Information Theory</category>
      <category>Probability Theory</category>
      <category>R</category>
      <guid>https://vgherard.github.io/posts/2023-11-15-interpreting-the-likelihood-ratio-cost</guid>
      <pubDate>2023-11-15</pubDate>
      <media:content url="https://vgherard.github.io/posts/2023-11-15-interpreting-the-likelihood-ratio-cost/interpreting-the-likelihood-ratio-cost_files/figure-html5/unnamed-chunk-3-1.png" medium="image" type="image/png" width="1248" height="768"/>
    </item>
    <item>
      <title>Conditional Probability</title>
      <dc:creator>vgherard</dc:creator>
      <link>https://vgherard.github.io/posts/2023-11-03-conditional-probability</link>
      <description>Notes on the formal definition of conditional probability.</description>
      <category>Probability Theory</category>
      <category>Measure Theory</category>
      <guid>https://vgherard.github.io/posts/2023-11-03-conditional-probability</guid>
      <pubDate>2023-11-03</pubDate>
    </item>
    <item>
      <title>Prefix-free codes</title>
      <dc:creator>vgherard</dc:creator>
      <link>https://vgherard.github.io/posts/2023-10-31-prefix-free-codes</link>
      <description>Generalities about prefix-free (a.k.a. instantaneous) codes</description>
      <category>Information Theory</category>
      <category>Entropy</category>
      <category>Probability Theory</category>
      <guid>https://vgherard.github.io/posts/2023-10-31-prefix-free-codes</guid>
      <pubDate>2023-10-31</pubDate>
    </item>
    <item>
      <title>AB tests and repeated checks</title>
      <dc:creator>vgherard</dc:creator>
      <link>https://vgherard.github.io/posts/2023-07-24-ab-tests-and-repeated-checks</link>
      <description>False Positive Rates under repeated checks - a simulation study using R.</description>
      <category>AB testing</category>
      <category>Sequential Hypothesis Testing</category>
      <category>Frequentist Methods</category>
      <category>Statistics</category>
      <category>R</category>
      <guid>https://vgherard.github.io/posts/2023-07-24-ab-tests-and-repeated-checks</guid>
      <pubDate>2023-07-27</pubDate>
      <media:content url="https://vgherard.github.io/posts/2023-07-24-ab-tests-and-repeated-checks/ab-tests-and-repeated-checks_files/figure-html5/unnamed-chunk-7-1.png" medium="image" type="image/png" width="1248" height="768"/>
    </item>
    <item>
      <title>Testing functional specification in linear regression</title>
      <dc:creator>vgherard</dc:creator>
      <link>https://vgherard.github.io/posts/2023-07-11-testing-functional-specification-in-linear-regression</link>
      <description>Some options in R, using the `{lmtest}` package.</description>
      <category>Statistics</category>
      <category>Model Misspecification</category>
      <category>Regression</category>
      <category>Linear Models</category>
      <category>R</category>
      <guid>https://vgherard.github.io/posts/2023-07-11-testing-functional-specification-in-linear-regression</guid>
      <pubDate>2023-07-11</pubDate>
      <media:content url="https://vgherard.github.io/posts/2023-07-11-testing-functional-specification-in-linear-regression/testing-functional-misspecification-in-linear-regression_files/figure-html5/unnamed-chunk-1-1.png" medium="image" type="image/png" width="1248" height="768"/>
    </item>
    <item>
      <title>Sum and ratio of independent random variables</title>
      <dc:creator>vgherard</dc:creator>
      <link>https://vgherard.github.io/posts/2023-06-14-sum-and-ratio-of-independent-random-variables</link>
      <description>Sufficient conditions for independence of sum and ratio.</description>
      <category>Mathematics</category>
      <category>Probability Theory</category>
      <guid>https://vgherard.github.io/posts/2023-06-14-sum-and-ratio-of-independent-random-variables</guid>
      <pubDate>2023-06-14</pubDate>
    </item>
    <item>
      <title>Fisher's Randomization Test</title>
      <dc:creator>vgherard</dc:creator>
      <link>https://vgherard.github.io/posts/2023-06-07-fishers-randomization-test</link>
      <description>Notes and proofs of basic theorems</description>
      <category>Statistics</category>
      <category>Frequentist Methods</category>
      <category>Causal Inference</category>
      <guid>https://vgherard.github.io/posts/2023-06-07-fishers-randomization-test</guid>
      <pubDate>2023-06-07</pubDate>
    </item>
    <item>
      <title>p-values and measure theory</title>
      <dc:creator>vgherard</dc:creator>
      <link>https://vgherard.github.io/posts/2023-06-07-p-values-and-measure-theory</link>
      <description>Self-reassurance that p-value properties don't depend on regularity 
assumptions on the test statistic.</description>
      <category>Probability Theory</category>
      <category>Measure Theory</category>
      <category>Frequentist Methods</category>
      <category>Statistics</category>
      <guid>https://vgherard.github.io/posts/2023-06-07-p-values-and-measure-theory</guid>
      <pubDate>2023-06-07</pubDate>
    </item>
    <item>
      <title>Linear regression with autocorrelated noise</title>
      <dc:creator>vgherard</dc:creator>
      <link>https://vgherard.github.io/posts/2023-05-20-linear-regression-with-autocorrelated-noise</link>
      <description>Effects of noise autocorrelation on linear regression. Explicit formulae and a simple simulation.</description>
      <category>Statistics</category>
      <category>Regression</category>
      <category>Time Series</category>
      <category>Linear Models</category>
      <category>Model Misspecification</category>
      <category>R</category>
      <guid>https://vgherard.github.io/posts/2023-05-20-linear-regression-with-autocorrelated-noise</guid>
      <pubDate>2023-05-25</pubDate>
      <media:content url="https://vgherard.github.io/posts/2023-05-20-linear-regression-with-autocorrelated-noise/linear-regression-with-autocorrelated-noise_files/figure-html5/unnamed-chunk-2-1.png" medium="image" type="image/png" width="1248" height="768"/>
    </item>
    <item>
      <title>Model Misspecification and Linear Sandwiches</title>
      <dc:creator>vgherard</dc:creator>
      <link>https://vgherard.github.io/posts/2023-05-14-model-misspecification-and-linear-sandwiches</link>
      <description>Being wrong in the right way. With R excerpts.</description>
      <category>Statistics</category>
      <category>Regression</category>
      <category>Linear Models</category>
      <category>Model Misspecification</category>
      <category>R</category>
      <guid>https://vgherard.github.io/posts/2023-05-14-model-misspecification-and-linear-sandwiches</guid>
      <pubDate>2023-05-14</pubDate>
      <media:content url="https://vgherard.github.io/posts/2023-05-14-model-misspecification-and-linear-sandwiches/misspecification-and-linear-sandwiches_files/figure-html5/unnamed-chunk-7-1.png" medium="image" type="image/png" width="1248" height="768"/>
    </item>
    <item>
      <title>Consistency and bias of OLS estimators</title>
      <dc:creator>vgherard</dc:creator>
      <link>https://vgherard.github.io/posts/2023-05-12-consistency-and-bias-of-ols-estimators</link>
      <description>OLS estimators are consistent but generally biased - here's an example.</description>
      <category>Statistics</category>
      <category>Regression</category>
      <category>Linear Models</category>
      <category>Model Misspecification</category>
      <guid>https://vgherard.github.io/posts/2023-05-12-consistency-and-bias-of-ols-estimators</guid>
      <pubDate>2023-05-12</pubDate>
    </item>
    <item>
      <title>Bayes, Neyman and the Magic Piggy Bank</title>
      <dc:creator>vgherard</dc:creator>
      <link>https://vgherard.github.io/posts/2023-05-01-magic-piggy-bank</link>
      <description>Compares frequentist properties of credible intervals and confidence 
intervals in a gambling game involving a magic piggy bank.</description>
      <category>Statistics</category>
      <category>Confidence Intervals</category>
      <category>Frequentist Methods</category>
      <category>Bayesian Methods</category>
      <guid>https://vgherard.github.io/posts/2023-05-01-magic-piggy-bank</guid>
      <pubDate>2023-05-01</pubDate>
    </item>
    <item>
      <title>Correlation Without Causation</title>
      <dc:creator>vgherard</dc:creator>
      <link>https://vgherard.github.io/posts/2023-03-10-correlation-without-causation</link>
      <description>*Cum hoc ergo propter hoc*</description>
      <category>Statistics</category>
      <guid>https://vgherard.github.io/posts/2023-03-10-correlation-without-causation</guid>
      <pubDate>2023-03-30</pubDate>
    </item>
    <item>
      <title>How to get away with selection. Part II: Mathematical Framework</title>
      <dc:creator>vgherard</dc:creator>
      <link>https://vgherard.github.io/posts/2022-11-07-posi-2</link>
      <description>Mathematicals details on Selective Inference, model misspecification and coverage guarantees.</description>
      <category>Statistics</category>
      <category>Selective Inference</category>
      <category>Model Misspecification</category>
      <guid>https://vgherard.github.io/posts/2022-11-07-posi-2</guid>
      <pubDate>2022-11-25</pubDate>
    </item>
    <item>
      <title>How to get away with selection. Part I: Introduction</title>
      <dc:creator>vgherard</dc:creator>
      <link>https://vgherard.github.io/posts/2022-10-18-posi</link>
      <description>Introducing the problem of Selective Inference, illustrated through a simple simulation in R.</description>
      <category>Statistics</category>
      <category>Selective Inference</category>
      <category>R</category>
      <guid>https://vgherard.github.io/posts/2022-10-18-posi</guid>
      <pubDate>2022-11-14</pubDate>
      <media:content url="https://vgherard.github.io/posts/2022-10-18-posi/posi_files/figure-html5/unnamed-chunk-3-1.png" medium="image" type="image/png" width="1248" height="768"/>
    </item>
    <item>
      <title>kgrams v0.1.2 on CRAN</title>
      <dc:creator>vgherard</dc:creator>
      <link>https://vgherard.github.io/posts/2021-11-13-kgrams-v012-released</link>
      <description>kgrams: Classical k-gram Language Models in R.</description>
      <category>Natural Language Processing</category>
      <category>R</category>
      <guid>https://vgherard.github.io/posts/2021-11-13-kgrams-v012-released</guid>
      <pubDate>2021-11-13</pubDate>
    </item>
    <item>
      <title>R Client for R-universe APIs</title>
      <dc:creator>vgherard</dc:creator>
      <link>https://vgherard.github.io/posts/2021-07-25-r-client-for-r-universe-apis</link>
      <description>{runi}, an R package to interact with R-universe repository APIs</description>
      <category>R</category>
      <guid>https://vgherard.github.io/posts/2021-07-25-r-client-for-r-universe-apis</guid>
      <pubDate>2021-07-25</pubDate>
    </item>
    <item>
      <title>Automatic resumes of your R-developer portfolio from your R-Universe</title>
      <dc:creator>vgherard</dc:creator>
      <link>https://vgherard.github.io/posts/2021-07-21-automatically-resume-your-r-package-portfolio-using-the-r-universe-api</link>
      <description>Create automatic resumes of your R packages using the R-Universe API.</description>
      <category>R</category>
      <guid>https://vgherard.github.io/posts/2021-07-21-automatically-resume-your-r-package-portfolio-using-the-r-universe-api</guid>
      <pubDate>2021-07-21</pubDate>
    </item>
    <item>
      <title>{r2r} now on CRAN</title>
      <dc:creator>vgherard</dc:creator>
      <link>https://vgherard.github.io/posts/2021-07-06-r2r</link>
      <description>Introducing {r2r}, an R implementation of hash tables.</description>
      <category>Data Structures</category>
      <category>R</category>
      <guid>https://vgherard.github.io/posts/2021-07-06-r2r</guid>
      <pubDate>2021-07-06</pubDate>
    </item>
    <item>
      <title>Test post</title>
      <dc:creator>vgherard</dc:creator>
      <link>https://vgherard.github.io/posts/2021-07-06-test-post</link>
      <description>A short description of the post.</description>
      <category>Other</category>
      <guid>https://vgherard.github.io/posts/2021-07-06-test-post</guid>
      <pubDate>2021-07-06</pubDate>
    </item>
  </channel>
</rss>
